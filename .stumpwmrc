;-*-lisp-*-

;;; Misc

(in-package :stumpwm)

(setf *default-package* :stumpwm)

; contrib modules
(load-module "battery-portable")
;(load "/home/jvanwink/checkout/stumpwm/contrib/surfraw.lisp")


(require 'swank)

(defvar HOME (getenv "HOME") "home directory")

(load "/usr/share/common-lisp/source/slime/swank-loader.lisp")
(swank-loader::load-swank)

(defparameter X-TERM "exec urxvt")

(setf *focus-color* "green")
(setf *unfocus-color* "black")

;(set-font "-lispm-fixed-medium-r-normal-*-9-*-*-*-*-*-*-*")
;(set-font "xft:Monaco-9")
(set-font "-*-fixed-medium-r-semicondensed-*-13-*-*-*-*-*-*-*")

(set-bg-color "black")
(set-fg-color "green")
(set-border-color "darkgreen")

(setf *screen-mode-line-format*
      (list ""  '(:eval (run-shell-command "date" t))))

(defcommand modline () ()
  (toggle-mode-line (current-screen) (current-head)))

(defparameter *swank-running* nil)
(defcommand swank () ()
	    (setf *swank-running* t)
	    (setf stumpwm:*top-level-error-action* :break)
	    (swank:create-server :port swank::default-server-port
				      :style swank:*communication-style*
				      :dont-close t))

;; keydefs 
(define-key *top-map* (kbd "s-b") "modline") ; bar
(define-key *top-map* (kbd "s-l") "windowlist") ; list windows
(define-key *top-map* (kbd "s-j") "fnext") ; jump to next frame
(define-key *top-map* (kbd "s-n") "pull-hidden-other") ; next
(define-key *top-map* (kbd "s-p") "exec") ; prompt
(define-key *top-map* (kbd "s-L") "grouplist") ; grouplist
